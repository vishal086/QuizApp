{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VISHAL\\\\OneDrive\\\\Desktop\\\\QuizApp\\\\Client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Questions from './Questions';\nimport { MoveNextQuestion, MovePrevQuestion } from '../hooks/FetchQuestion';\nimport { PushAnswer } from '../hooks/setResult';\n\n/** redux store import */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n  const [check, setChecked] = useState(undefined);\n  const result = useSelector(state => state.result.result);\n  const {\n    queue,\n    trace\n  } = useSelector(state => state.questions);\n  const dispatch = useDispatch();\n\n  /** next button event handler */\n  function onNext() {\n    if (trace < queue.length) {\n      /** increase the trace value by one using MoveNextAction */\n      dispatch(MoveNextQuestion());\n\n      /** insert a new result in the array.  */\n      if (result.length <= trace) {\n        dispatch(PushAnswer(check));\n      }\n    }\n\n    /** reset the value of the checked variable */\n    setChecked(undefined);\n  }\n\n  /** Prev button event handler */\n  function onPrev() {\n    if (trace > 0) {\n      /** decrease the trace value by one using MovePrevQuestion */\n      dispatch(MovePrevQuestion());\n    }\n  }\n  function onChecked(check) {\n    setChecked(check);\n  }\n\n  /** finished exam after the last question */\n  if (result.length && result.length >= queue.length) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/result',\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title text-light\",\n      children: \"Quiz Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Questions, {\n      onChecked: onChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [trace > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn prev\",\n        onClick: onPrev,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 89\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn next\",\n        onClick: onNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"YBm9kR+hLN00fICnSZPX305t2UY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","Questions","MoveNextQuestion","MovePrevQuestion","PushAnswer","useSelector","useDispatch","Navigate","Quiz","check","setChecked","undefined","result","state","queue","trace","questions","dispatch","onNext","length","onPrev","onChecked"],"sources":["C:/Users/VISHAL/OneDrive/Desktop/QuizApp/Client/src/components/Quiz.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Questions from './Questions'\n\nimport { MoveNextQuestion, MovePrevQuestion } from '../hooks/FetchQuestion';\nimport { PushAnswer } from '../hooks/setResult';\n\n/** redux store import */\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Navigate } from 'react-router-dom'\n\nexport default function Quiz() {\n\n    const [check, setChecked] = useState(undefined)\n\n    const result = useSelector(state => state.result.result);\n    const { queue, trace } = useSelector(state => state.questions);\n    const dispatch = useDispatch()\n\n    /** next button event handler */\n    function onNext(){\n        if(trace < queue.length){\n            /** increase the trace value by one using MoveNextAction */\n            dispatch(MoveNextQuestion());\n\n            /** insert a new result in the array.  */\n            if(result.length <= trace){\n                dispatch(PushAnswer(check))\n            }\n        }\n     \n        /** reset the value of the checked variable */\n        setChecked(undefined)\n    }\n\n    /** Prev button event handler */\n    function onPrev(){\n        if(trace > 0){\n            /** decrease the trace value by one using MovePrevQuestion */\n            dispatch(MovePrevQuestion());\n        }\n    }\n\n    function onChecked(check){\n        setChecked(check)\n    }\n\n    /** finished exam after the last question */\n    if(result.length && result.length >= queue.length){\n        return <Navigate to={'/result'} replace={true}></Navigate>\n    }\n\n  return (\n    <div className='container'>\n        <h1 className='title text-light'>Quiz Application</h1>\n\n        {/* display questions */}\n        <Questions onChecked={onChecked} />\n\n        <div className='grid'>\n            { trace > 0 ? <button className='btn prev' onClick={onPrev}>Prev</button> : <div></div>}\n            <button className='btn next' onClick={onNext}>Next</button>\n        </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AAEnC,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,wBAAwB;AAC3E,SAASC,UAAU,QAAQ,oBAAoB;;AAE/C;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,kBAAkB;AAAA;AAE3C,eAAe,SAASC,IAAI,GAAG;EAAA;EAE3B,MAAM,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACW,SAAS,CAAC;EAE/C,MAAMC,MAAM,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,MAAM,CAACA,MAAM,CAAC;EACxD,MAAM;IAAEE,KAAK;IAAEC;EAAM,CAAC,GAAGV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACG,SAAS,CAAC;EAC9D,MAAMC,QAAQ,GAAGX,WAAW,EAAE;;EAE9B;EACA,SAASY,MAAM,GAAE;IACb,IAAGH,KAAK,GAAGD,KAAK,CAACK,MAAM,EAAC;MACpB;MACAF,QAAQ,CAACf,gBAAgB,EAAE,CAAC;;MAE5B;MACA,IAAGU,MAAM,CAACO,MAAM,IAAIJ,KAAK,EAAC;QACtBE,QAAQ,CAACb,UAAU,CAACK,KAAK,CAAC,CAAC;MAC/B;IACJ;;IAEA;IACAC,UAAU,CAACC,SAAS,CAAC;EACzB;;EAEA;EACA,SAASS,MAAM,GAAE;IACb,IAAGL,KAAK,GAAG,CAAC,EAAC;MACT;MACAE,QAAQ,CAACd,gBAAgB,EAAE,CAAC;IAChC;EACJ;EAEA,SAASkB,SAAS,CAACZ,KAAK,EAAC;IACrBC,UAAU,CAACD,KAAK,CAAC;EACrB;;EAEA;EACA,IAAGG,MAAM,CAACO,MAAM,IAAIP,MAAM,CAACO,MAAM,IAAIL,KAAK,CAACK,MAAM,EAAC;IAC9C,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAE,SAAU;MAAC,OAAO,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAY;EAC9D;EAEF,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAI,SAAS,EAAC,kBAAkB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eAGtD,QAAC,SAAS;MAAC,SAAS,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAEnC;MAAK,SAAS,EAAC,MAAM;MAAA,WACfN,KAAK,GAAG,CAAC,gBAAG;QAAQ,SAAS,EAAC,UAAU;QAAC,OAAO,EAAEK,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,gBAAG;QAAA;QAAA;QAAA;MAAA,QAAW,eACvF;QAAQ,SAAS,EAAC,UAAU;QAAC,OAAO,EAAEF,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GAtDuBV,IAAI;EAAA,QAITH,WAAW,EACDA,WAAW,EACnBC,WAAW;AAAA;AAAA,KANRE,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}