[{"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\index.js":"1","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\App.js":"2","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\redux\\store.js":"3","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\Quiz.js":"4","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\Main.js":"5","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\redux\\question_reducer.js":"6","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\Result.js":"7","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\redux\\result_reducer.js":"8","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\helper\\helper.js":"9","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\Questions.js":"10","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\ResultTable.js":"11","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\hooks\\FetchQuestion.js":"12","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\hooks\\setResult.js":"13"},{"size":369,"mtime":1730398687562,"results":"14","hashOfConfig":"15"},{"size":664,"mtime":1730355883583,"results":"16","hashOfConfig":"15"},{"size":378,"mtime":1730355884141,"results":"17","hashOfConfig":"15"},{"size":1944,"mtime":1730355883738,"results":"18","hashOfConfig":"15"},{"size":1236,"mtime":1730393988314,"results":"19","hashOfConfig":"15"},{"size":1093,"mtime":1730355884056,"results":"20","hashOfConfig":"15"},{"size":2658,"mtime":1730355883788,"results":"21","hashOfConfig":"15"},{"size":869,"mtime":1730355884098,"results":"22","hashOfConfig":"15"},{"size":1114,"mtime":1730355883896,"results":"23","hashOfConfig":"15"},{"size":1847,"mtime":1730355883680,"results":"24","hashOfConfig":"15"},{"size":1213,"mtime":1730355883837,"results":"25","hashOfConfig":"15"},{"size":1942,"mtime":1730378178343,"results":"26","hashOfConfig":"15"},{"size":892,"mtime":1730355884000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"120w5hu",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\index.js",[],[],"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\App.js",[],[],[],"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\redux\\store.js",[],[],"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\Quiz.js",["71"],[],"import React, { useEffect, useState } from 'react'\nimport Questions from './Questions'\n\nimport { MoveNextQuestion, MovePrevQuestion } from '../hooks/FetchQuestion';\nimport { PushAnswer } from '../hooks/setResult';\n\n/** redux store import */\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Navigate } from 'react-router-dom'\n\nexport default function Quiz() {\n\n    const [check, setChecked] = useState(undefined)\n\n    const result = useSelector(state => state.result.result);\n    const { queue, trace } = useSelector(state => state.questions);\n    const dispatch = useDispatch()\n\n    /** next button event handler */\n    function onNext(){\n        if(trace < queue.length){\n            /** increase the trace value by one using MoveNextAction */\n            dispatch(MoveNextQuestion());\n\n            /** insert a new result in the array.  */\n            if(result.length <= trace){\n                dispatch(PushAnswer(check))\n            }\n        }\n     \n        /** reset the value of the checked variable */\n        setChecked(undefined)\n    }\n\n    /** Prev button event handler */\n    function onPrev(){\n        if(trace > 0){\n            /** decrease the trace value by one using MovePrevQuestion */\n            dispatch(MovePrevQuestion());\n        }\n    }\n\n    function onChecked(check){\n        setChecked(check)\n    }\n\n    /** finished exam after the last question */\n    if(result.length && result.length >= queue.length){\n        return <Navigate to={'/result'} replace={true}></Navigate>\n    }\n\n  return (\n    <div className='container'>\n        <h1 className='title text-light'>Quiz Application</h1>\n\n        {/* display questions */}\n        <Questions onChecked={onChecked} />\n\n        <div className='grid'>\n            { trace > 0 ? <button className='btn prev' onClick={onPrev}>Prev</button> : <div></div>}\n            <button className='btn next' onClick={onNext}>Next</button>\n        </div>\n    </div>\n  )\n}\n","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\Main.js",[],[],"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\redux\\question_reducer.js",[],[],"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\Result.js",["72"],[],"import React, { useEffect } from 'react'\nimport '../styles/Result.css';\nimport { Link } from 'react-router-dom';\n\nimport ResultTable from './ResultTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { attempts_Number, earnPoints_Number, flagResult } from '../helper/helper';\n\n/** import actions  */\nimport { resetAllAction } from '../redux/question_reducer';\nimport { resetResultAction } from '../redux/result_reducer';\nimport { usePublishResult } from '../hooks/setResult';\n\n\nexport default function Result() {\n\n    const dispatch = useDispatch()\n    const { questions : { queue ,answers}, result : { result, userId}}  = useSelector(state => state)\n\n    const totalPoints = queue.length * 10; \n    const attempts = attempts_Number(result);\n    const earnPoints = earnPoints_Number(result, answers, 10)\n    const flag = flagResult(totalPoints, earnPoints)\n\n\n    /** store user result */\n    usePublishResult({ \n        result, \n        username : userId,\n        attempts,\n        points: earnPoints,\n        achived : flag ? \"Passed\" : \"Failed\" });\n\n    function onRestart(){\n        dispatch(resetAllAction())\n        dispatch(resetResultAction())\n    }\n\n  return (\n    <div className='container'>\n        <h1 className='title text-light'>Quiz Application</h1>\n\n        <div className='result flex-center'>\n            <div className='flex'>\n                <span>Username</span>\n                <span className='bold'>{userId || \"\"}</span>\n            </div>\n            <div className='flex'>\n                <span>Total Quiz Points : </span>\n                <span className='bold'>{totalPoints || 0}</span>\n            </div>\n            <div className='flex'>\n                <span>Total Questions : </span>\n                <span className='bold'>{ queue.length || 0}</span>\n            </div>\n            <div className='flex'>\n                <span>Total Attempts : </span>\n                <span className='bold'>{attempts || 0}</span>\n            </div>\n            <div className='flex'>\n                <span>Total Earn Points : </span>\n                <span className='bold'>{earnPoints || 0}</span>\n            </div>\n            <div className='flex'>\n                <span>Quiz Result</span>\n                <span style={{ color : `${flag ? \"#2aff95\" : \"#ff2a66\" }` }} className='bold'>{flag ? \"Passed\" : \"Failed\"}</span>\n            </div>\n        </div>\n\n        <div className=\"start\">\n            <Link className='btn' to={'/'} onClick={onRestart}>Restart</Link>\n        </div>\n\n        <div className=\"container\">\n            {/* result table */}\n            <ResultTable></ResultTable>\n        </div>\n    </div>\n  )\n}\n","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\redux\\result_reducer.js",[],[],"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\helper\\helper.js",[],[],"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\Questions.js",["73","74","75"],[],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n\n/** Custom Hook */\nimport { useFetchQestion } from '../hooks/FetchQuestion'\nimport { updateResult } from '../hooks/setResult'\n\n\nexport default function Questions({ onChecked }) {\n\n    const [checked, setChecked] = useState(undefined)\n    const { trace } = useSelector(state => state.questions);\n    const result = useSelector(state => state.result.result);\n    const [{ isLoading, apiData, serverError}] = useFetchQestion() \n\n    const questions = useSelector(state => state.questions.queue[state.questions.trace])\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(updateResult({ trace, checked}))\n    }, [checked])\n    \n    function onSelect(i){\n        onChecked(i)\n        setChecked(i)\n        dispatch(updateResult({ trace, checked}))\n    }\n\n\n    if(isLoading) return <h3 className='text-light'>isLoading</h3>\n    if(serverError) return <h3 className='text-light'>{serverError || \"Unknown Error\"}</h3>\n\n  return (\n    <div className='questions'>\n        <h2 className='text-light'>{questions?.question}</h2>\n\n        <ul key={questions?.id}>\n            {\n                questions?.options.map((q, i) => (\n                    <li key={i}>\n                        <input \n                            type=\"radio\"\n                            value={false}\n                            name=\"options\"\n                            id={`q${i}-option`}\n                            onChange={() => onSelect(i)}\n                        />\n\n                        <label className='text-primary' htmlFor={`q${i}-option`}>{q}</label>\n                        <div className={`check ${result[trace] == i ? 'checked' : ''}`}></div>\n                    </li>\n                ))\n            }\n        </ul>\n    </div>\n  )\n}\n","C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\components\\ResultTable.js",[],[],"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\hooks\\FetchQuestion.js",[],[],"C:\\Users\\VISHAL\\OneDrive\\Desktop\\QuizApp\\Client\\src\\hooks\\setResult.js",[],[],{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"80","line":15,"column":25,"nodeType":"78","messageId":"79","endLine":15,"endColumn":32},{"ruleId":"81","severity":1,"message":"82","line":22,"column":8,"nodeType":"83","endLine":22,"endColumn":17,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":51,"column":64,"nodeType":"87","messageId":"88","endLine":51,"endColumn":66},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'apiData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'trace'. Either include them or remove the dependency array.","ArrayExpression",["89"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"90","fix":"91"},"Update the dependencies array to be: [checked, dispatch, trace]",{"range":"92","text":"93"},[738,747],"[checked, dispatch, trace]"]